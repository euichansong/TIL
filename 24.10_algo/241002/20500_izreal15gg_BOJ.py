"""
2진수 갯수랑 똑같은거 같은데? 이걸로 dp 잡고 풀어야 할듯
1 5 >>> 0
11 15 51 55   >>1 15
111 115 151 155 511 515 551 555 >> 1 555
1111 1115 1151 1155 1511 1515 1551 1555 5111 5115 5151 5155 5511 5515 5551 5555 >> 3 1155 1515 5115
['11111', '11115'd, '11151', '11155', '11511', '11515', '11551', '11555', '15111', '15115', '15151', '15155', '15511', '15515', '15551', '15555'd, '51111', '51115', '51151', '51155', '51511', '51515', '51551', '51555'd, '55111', '55115', '55151', '55155'd, '55511', '55515'd, '55551', '55555'] >>> 5 11115 15555 51555 55155 55515

15의 배수 는 3의 배수임과 동시에 5의 배수
3의 배수는 각 자릿수 총 합이 3의 배수면 배수
5의 배수는 끝자리가 0 5 이면 배수

15로 나눠서 나머지가 10이면 5 더해주면 ? 배수
나머지가 5면 전전꺼 나머지가 10
나머지가 0이면 다다다음?

>>> 짝수면 전거 *2 +1 홀수면 전 꺼 *2 -1
"""
from itertools import product
n = int(input())
dp = [0] * 1516
dp[0] = 0
dp[1] = 0
dp[2] = 1
dp[3] = 1
for i in range(3,n+1):
    if i % 2 == 0:
        dp[i] = dp[i-1] * 2 + 1
    else:
         dp[i] = dp[i-1] * 2 - 1

answer = dp[n] % 1000000007
print(answer)

